"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var child_process_1 = require("child_process");
/**Run command from Guake Terminal. */
var runGuake = function (command, _a, terminalArgs) {
    if (_a === void 0) { _a = {}; }
    var _b = _a.detached, detached = _b === void 0 ? true : _b, _c = _a.stdio, stdio = _c === void 0 ? 'ignore' : _c, _d = _a.shell, shell = _d === void 0 ? false : _d, restSpawnOptions = __rest(_a, ["detached", "stdio", "shell"]);
    var cwd = process.cwd();
    var args = ['--show', '-n', cwd];
    if (terminalArgs) {
        args = __spreadArrays(terminalArgs);
    }
    if (!args.includes('-e') && !args.includes('--execute-command')) {
        args.push('-e', command);
    }
    // console.log(args)
    var cmdProcess = child_process_1.spawn('guake', args, __assign({ detached: detached,
        stdio: stdio,
        shell: shell }, restSpawnOptions));
    return cmdProcess;
};
exports.default = runGuake;
// // test
// const path = require('path')
// const testPath = path.join(__dirname, './test.js')
// //
// console.log('aaaaaaa')
// const command = `node ${testPath}`
// const cmdProcess = runGuake(command, [])
// if (!cmdProcess.pid) {
//     throw new Error('Cant start process.')
// }
// cmdProcess.unref()
